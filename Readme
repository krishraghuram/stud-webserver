On a fresh install of linux, the following steps need to be followed to set up the stud-webserver

Setting up proxy
	Set up proxy for apt in /etc/apt/apt.conf
	Set up environment proxy in ~/.bashrc
	For more about proxy settings, check out this link
	https://raghuramkrishnaswami.wordpress.com/2016/01/18/setting-up-proxyies-in-ubuntu/

Installing pip and virtualenv
	sudo apt-get update
	sudo apt-get install python-pip python-dev build-essential 
	sudo -E pip install --upgrade pip
	sudo -E pip install --upgrade virtualenv 

Installing mariadb-server
	sudo apt-get install software-properties-common
	sudo -E apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xcbcb082a1bb943db
	sudo -E add-apt-repository 'deb [arch=amd64,i386,ppc64el] http://nyc2.mirrors.digitalocean.com/mariadb/repo/10.0/ubuntu trusty main'
	sudo apt-get update
	sudo apt-get install mariadb-server
	mysql_secure_installation
	mysql -u root -p
		CREATE DATABASE stud;
		exit;

Creating a virtual environment for the project
	virtualenv stud
	source stud/bin/activate
	pip install django
	sudo apt-get install libmysqlclient-dev
	pip install mysql-python
	pip install python-dateutil
	pip install pytz
	cd stud
	git clone https://github.com/krishraghuram/stud-webserver.git
	cd stud/
	nano stud/settings.py
		set ALLOWED_HOSTS=['machine-ip']
		set DATABASE OPTIONS
		set STATIC_ROOT='/home/ubuntu/stud/stud/static/'
	python manage.py makemigrations
	python manage.py migrate
	python manage.py createsuperuser
		techsec
		techsec@iitg.ernet.in
		***************
	python manage.py runserver 0.0.0.0:8000

Follow these for apache and mod_wsgi
https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-apache-and-mod_wsgi-on-ubuntu-16-04
https://docs.djangoproject.com/en/1.10/howto/static-files/
https://docs.djangoproject.com/en/1.10/howto/static-files/deployment/
	sudo apt-get install apache2 libapache2-mod-wsgi
	sudo nano /etc/apache2/sites-available/000-default.conf
		<VirtualHost *:80>
		    
		    . . .
		    . . . 
		    . . .

	        ServerName machine-ip
	        Alias /static /home/ubuntu/stud/stud/static/
	        <Directory /home/ubuntu/stud/stud/static>
	                Require all granted
	        </Directory>
	        <Directory /home/ubuntu/stud/stud/stud/>
	                <Files wsgi.py>
	                        Require all granted
	                </Files>
	        </Directory>

	        WSGIDaemonProcess stud python-home=/home/ubuntu/stud/ python-path=/home/ubuntu/stud/stud
	        WSGIProcessGroup stud
	        WSGIScriptAlias / /home/ubuntu/stud/stud/stud/wsgi.py
		</VirtualHost>
	chmod 664 ~/stud/stud/db.sqlite3
	sudo chown :www-data ~/stud/stud/db.sqlite3
	sudo chown :www-data ~/stud/stud
	sudo apache2ctl configtest
		You may get this. Dont worry about it.
		AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' directive globally to suppress this message
		Syntax OK
	If things still dont work,
		sudo chown :www-data ~/stud/stud/static/

Add "python manage.py checkmail" as a CRON job

